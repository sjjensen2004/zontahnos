{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/page.tsx"],"sourcesContent":["\"use client\"; // Ensures it runs on the client-side\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\n\nconst ICMPProbes = () => {\n  const [probes, setProbes] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [measurement, setMeasurement] = useState(\"icmp_probes\");\n  const [probeNameToUpdate, setProbeNameToUpdate] = useState(\"\");\n  const [newLocation, setNewLocation] = useState(\"\");\n  const [probeNameToDelete, setProbeNameToDelete] = useState(\"\");\n\n  const fetchProbes = async () => {\n    try {\n      const response = await axios.get(`${process.env.NEXT_PUBLIC_API_URL}/api/v1/icmp/list`);\n      setProbes(response.data.probes);\n    } catch (error) {\n      console.error(\"Error fetching probes:\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchProbes();\n  }, []);\n\n  const createProbe = async () => {\n    try {\n      const response = await axios.post(`${process.env.NEXT_PUBLIC_API_URL}/api/v1/icmp/create`, {\n        name,\n        location,\n        measurement,\n      });\n      setProbes((prev) => [...prev, response.data]);\n      setName(\"\");\n      setLocation(\"\");\n    } catch (error) {\n      console.error(\"Error creating probe:\", error);\n    }\n  };\n\n  const updateProbe = async () => {\n    try {\n      await axios.post(`${process.env.NEXT_PUBLIC_API_URL}/api/v1/icmp/update`, {\n        probe_name: probeNameToUpdate,\n        location: newLocation,\n      });\n      setProbes((prev) =>\n        prev.map((probe) =>\n          probe.name === probeNameToUpdate ? { ...probe, location: newLocation } : probe\n        )\n      );\n      setProbeNameToUpdate(\"\");\n      setNewLocation(\"\");\n    } catch (error) {\n      console.error(\"Error updating probe:\", error);\n    }\n  };\n\n  const deleteProbe = async () => {\n    try {\n      await axios.post(`${process.env.NEXT_PUBLIC_API_URL}/api/v1/icmp/delete`, {\n        name: probeNameToDelete,\n      });\n      setProbes((prev) => prev.filter((probe) => probe.name !== probeNameToDelete));\n      setProbeNameToDelete(\"\");\n    } catch (error) {\n      console.error(\"Error deleting probe:\", error);\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto p-6\">\n      <h1 className=\"text-2xl font-bold mb-6\">ICMP Probes</h1>\n\n      {/* Create Probe */}\n      <div className=\"mb-6\">\n        <h2 className=\"text-xl font-semibold mb-2\">Create Probe</h2>\n        <div className=\"flex flex-col gap-2\">\n          <Input placeholder=\"Name\" value={name} onChange={(e) => setName(e.target.value)} />\n          <Input placeholder=\"Location\" value={location} onChange={(e) => setLocation(e.target.value)} />\n          <Button onClick={createProbe}>Create Probe</Button>\n        </div>\n      </div>\n\n      {/* Update Probe */}\n      <div className=\"mb-6\">\n        <h2 className=\"text-xl font-semibold mb-2\">Update Probe</h2>\n        <div className=\"flex flex-col gap-2\">\n          <Input\n            placeholder=\"Probe Name\"\n            value={probeNameToUpdate}\n            onChange={(e) => setProbeNameToUpdate(e.target.value)}\n          />\n          <Input\n            placeholder=\"New Location\"\n            value={newLocation}\n            onChange={(e) => setNewLocation(e.target.value)}\n          />\n          <Button onClick={updateProbe}>Update Probe</Button>\n        </div>\n      </div>\n\n      {/* Delete Probe */}\n      <div className=\"mb-6\">\n        <h2 className=\"text-xl font-semibold mb-2\">Delete Probe</h2>\n        <div className=\"flex flex-col gap-2\">\n          <Input\n            placeholder=\"Probe Name\"\n            value={probeNameToDelete}\n            onChange={(e) => setProbeNameToDelete(e.target.value)}\n          />\n          <Button variant=\"destructive\" onClick={deleteProbe}>\n            Delete Probe\n          </Button>\n        </div>\n      </div>\n\n      {/* Display Probes */}\n      <h2 className=\"text-xl font-semibold mb-2\">Active Probes</h2>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n        {probes.map((probe) => (\n          <Card key={probe.id} className=\"p-4 shadow-md\">\n            <p className=\"font-semibold\">{probe.name}</p>\n            <p className=\"text-gray-600\">{probe.location}</p>\n          </Card>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ICMPProbes;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 409, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}